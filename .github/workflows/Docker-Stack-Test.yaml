name: CI

on:
  push:
    branches:
      - master
      - develop
      - Docker-Stack-Test

    tags:
      - '*'

  pull_request:

  merge_group:

  issue_comment:
    types:
      - created

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
  
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
        RSPM: ${{ matrix.config.rspm }}
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  
    steps:
        - uses: actions/checkout@v3

        - uses: r-lib/actions/setup-r@v2
        - name: Query dependencies
          run: |
            install.packages('remotes')
            saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
            writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
          shell: Rscript {0}


        - name: Cache R packages
          uses: actions/cache@v1
          with:
            path: ${{ env.R_LIBS_USER }}
            key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
            restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

        - name: Install dependencies
          run: |
            remotes::install_deps(dependencies = TRUE)
            install.packages("XML")
            install.packages("devtools")
            devtools::install_github("PecanProject/rpecanapi")
            install.packages("dplyr")
            install.packages("tidyr")
          shell: Rscript {0}

        - name: Set up Docker Compose
          run: |
              sudo apt-get update
              sudo apt-get -y install docker-compose
        - name: Build and run containers
          run: |
            docker system prune --all --force
            touch .env
            echo "COMPOSE_PROJECT_NAME=pecan" >> .env
            echo "PECAN_VERSION=develop" >> .env
            echo "UID=$(id -u)" >> .env
            echo "GID=$(id -g)" >> .env
            docker-compose up -d postgres
            docker run --rm --network pecan_pecan pecan/db
            
            docker-compose run  bety user guestuser guestuser "Guest User" guestuser@example.com 4 4
            
            docker-compose run  bety user carya illinois "Carya Demo User" carya@example.com 1 1
            docker run --rm --network pecan_pecan --volume pecan_pecan:/data --env FQDN=docker pecan/data:develop
            docker run --rm --network pecan_pecan --volume pecan_pecan:/data pecan/data:develop chown -R "$(id -u).$(id -g)" /data
    
            docker run --user="$(id -u)" --rm --network pecan_pecan --volume pecan_pecan:/data --env FQDN=docker pecan/data:develop
    
            docker-compose up -d 
    
    
        - name: Wait for services to start
          run: |
           
            docker-compose ps
            sleep 20 # Adjust the duration as needed
            docker-compose ps
            sleep 20
            docker-compose ps
            sleep 20
          
        
        - name: Display running containers
          run: |
            docker-compose ps
            docker network ls 
            docker network inspect bridge
          
        - name: Generate data
          run: |
            
            source("inst/run-docker-test.R")
          shell: Rscript {0}
      
        
        - name: Session info
          run: |
            options(width = 100)
            pkgs <- installed.packages()[, "Package"]
            sessioninfo::session_info(pkgs, include_base = TRUE)
          shell: Rscript {0}
          
        - name: Push to github
          run: |
              git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com" && \
                git config --global user.name "${GITHUB_ACTOR}"
              git add --all *
              git commit -m "Update Result"
              git push -q origin main
